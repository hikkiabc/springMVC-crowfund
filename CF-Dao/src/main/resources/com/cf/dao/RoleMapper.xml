<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cf.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.cf.beans.Role">
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cf.beans.Role">
    insert into t_role (role_id, role_name)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.cf.beans.Role">
    update t_role
    set role_name = #{roleName,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select role_id, role_name
    from t_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select role_id, role_name
    from t_role
  </select>
  <select id="queryTotalCount" resultType="Integer">
    select count(*) from t_role <where>
    <if test="keywords!=null"> role_name like concat("%",#{keywords},"%") </if>
  </where>
  </select>

  <select id="queryRolesByPageAndKeywords" resultMap="BaseResultMap">
    select * from t_role
    <where><if test="keywords!=null">
      role_name like concat("%",${keywords},"%")
    </if></where>
    limit #{pageNum},#{pageSize}
  </select>
<update id="updateRolePermissionByRoleId" parameterType="Integer">
    insert into t_role_permission (role_id,permission_id ) values <foreach collection="idList" item="i" separator=",">
  (#{roleId},#{i})
</foreach>

</update>
  <delete id="deleteRolePermissionsByRoleId" parameterType="int">
    delete from t_role_permission where role_id=#{roleId}
  </delete>
</mapper>